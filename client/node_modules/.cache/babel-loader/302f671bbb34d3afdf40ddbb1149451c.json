{"ast":null,"code":"import { size } from \"./10-Estructures\"; // _________________________________________\n\n/* Funciones auxiliares usadas para updatear */\n\nfunction Row(qube) {\n  let width = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : size;\n  //Retorna en qué fila va el qube (0 ~ 81) ingresado\n  return Math.floor(qube / width);\n}\n\n_c = Row;\n\nfunction Col(qube) {\n  let heigth = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : size;\n  //Retorna en qué columna va el qube (0 ~ 81) ingresado \n  return qube % heigth;\n} //Escalables para sudokus más grandes ✅\n\n\n_c2 = Col;\nexport { Row, Col };\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Row\");\n$RefreshReg$(_c2, \"Col\");","map":{"version":3,"names":["size","Row","qube","width","Math","floor","Col","heigth"],"sources":["F:/code/SudoQubs/src/functions/11-Dimensions.js"],"sourcesContent":["import { size } from \"./10-Estructures\"\r\n// _________________________________________\r\n/* Funciones auxiliares usadas para updatear */\r\n\r\nfunction Row (qube, width= size) { //Retorna en qué fila va el qube (0 ~ 81) ingresado\r\n    return Math.floor(qube / width) \r\n}\r\n\r\nfunction Col (qube, heigth= size) { //Retorna en qué columna va el qube (0 ~ 81) ingresado \r\n    return qube % heigth\r\n}\r\n\r\n//Escalables para sudokus más grandes ✅\r\nexport{\r\n    Row,\r\n    Col,\r\n}"],"mappings":"AAAA,SAASA,IAAT,QAAqB,kBAArB,C,CACA;;AACA;;AAEA,SAASC,GAAT,CAAcC,IAAd,EAAiC;EAAA,IAAbC,KAAa,uEAANH,IAAM;EAAE;EAC/B,OAAOI,IAAI,CAACC,KAAL,CAAWH,IAAI,GAAGC,KAAlB,CAAP;AACH;;KAFQF,G;;AAIT,SAASK,GAAT,CAAcJ,IAAd,EAAkC;EAAA,IAAdK,MAAc,uEAANP,IAAM;EAAE;EAChC,OAAOE,IAAI,GAAGK,MAAd;AACH,C,CAED;;;MAJSD,G;AAKT,SACIL,GADJ,EAEIK,GAFJ"},"metadata":{},"sourceType":"module"}