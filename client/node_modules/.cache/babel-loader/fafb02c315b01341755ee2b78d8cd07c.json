{"ast":null,"code":"var _jsxFileName = \"F:\\\\code\\\\SudoQubs\\\\src\\\\components\\\\1-Oneandhalf.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\"; // import { Vertex } from \"../functions/10-Estructures\"\n// import { updateEvery } from \"../functions/14-Global\"\n// import { updateQubsBy } from \"../functions/16-UpdateQubsBy\"\n// import { create3 } from \"../functions/17-Create\"\n\nimport Two from \"./2-Two\";\nimport '../styles/ask.css'; // import { kill } from \"../functions/25-Generate\"\n// import { Seniority } from \"../functions/7-Seniority\"\n// import axios from 'axios';\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getSudoku } from \"../redux/actions\";\nimport { useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Auxiliar(_ref) {\n  _s();\n\n  let {\n    sizing,\n    level\n  } = _ref;\n  // let[sudoku, setSudoku] = useState(undefined)\n  let siz = parseInt(sizing); // let sudoku\n\n  let [react, setReact] = useState();\n  let [state, setState] = useState({\n    mood: undefined\n  }); // Redux:\n\n  const dispatch = useDispatch();\n  let sudoku = useSelector(state => state.rows);\n  console.log(sudoku); // useEffect(()=>{\n  //     setReact(sudoku)\n  //     setState({mood: 'generated'})\n  // }, [sudoku])\n  // console.log({siz, react, mood:state.mood})\n  // console.log(equal(size,s1,u1))\n  // function equal(size,c1_s,s1){\n  //     for(let pp=0; pp<size;pp++){\n  //         if(!c1_s.rows[pp].every(function(v,i) { return v === s1.rows[pp][i] } )) return false;\n  //     }\n  //     return true\n  // }\n  // axios.get('http://localhost:3001/foreign').then(r=> console.log('línea 30', r))\n\n  function generate() {\n    if (state.mood === 'generated') del(); //Próximamente: create3() tendrá adentro suyo las siguientes 4 líneas:\n    // var size= 0; size= parseInt(sizing)\n    // var s1= {}; s1= Vertex(size) //Estructuras\n    // var u1= {}; u1= updateEvery(size*size, s1.rows, s1.cols, s1.boxs, s1.qubs) //Con 0s\n    // var c1_s= {}; c1_s= create3(size, s1.rows, s1.cols, s1.boxs, s1.qubs) //Con el sudoku lleno\n    // c1_s.qubs = updateQubsBy('rows', s1.rows) //Qubs actualizados\n    // console.log({before:c1_s})\n    // // let killed= Seniority(level, siz*siz) \n    // // let ready= kill(killed, c1_s.qubs)\n    // updateEvery(siz*siz,c1_s.rows,c1_s.cols,c1_s.boxs,c1_s.qubs)\n    // console.log({after:c1_s})\n    // console.log('lo que estás buscando',equal(size,c1_s,s1))\n\n    dispatch(getSudoku(parseInt(sizing))); // sudoku= (c1_s) // acá se cambia y listo\n    // setReact(sudoku)\n    // setState({mood: 'generated'})\n    // return {sudoku}\n  } // function del(){\n  //     // sudoku= (undefined)\n  //     setReact(undefined)\n  //     setState({mood: 'deleted'})\n  // }\n  // let myPromis = new Promise(function(myResolve, myReject) {\n  //         myResolve(generate); \n  // });\n  // function myResolve(a){\n  //     console.log(a())\n  // }\n  // function protocol(){\n  //     myPromis.then(function(value) {\n  //         console.log(value());\n  //     });\n  // }\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: sizing && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: generate,\n          children: \"Generate\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Auxiliar, \"nx13YLR1HkQB09tRdxrALYSY7no=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = Auxiliar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Auxiliar\");","map":{"version":3,"names":["useState","Two","useDispatch","useSelector","getSudoku","useEffect","Auxiliar","sizing","level","siz","parseInt","react","setReact","state","setState","mood","undefined","dispatch","sudoku","rows","console","log","generate","del"],"sources":["F:/code/SudoQubs/src/components/1-Oneandhalf.jsx"],"sourcesContent":["import { useState } from \"react\"\r\n// import { Vertex } from \"../functions/10-Estructures\"\r\n// import { updateEvery } from \"../functions/14-Global\"\r\n// import { updateQubsBy } from \"../functions/16-UpdateQubsBy\"\r\n// import { create3 } from \"../functions/17-Create\"\r\nimport Two from \"./2-Two\"\r\nimport '../styles/ask.css';\r\n// import { kill } from \"../functions/25-Generate\"\r\n// import { Seniority } from \"../functions/7-Seniority\"\r\n// import axios from 'axios';\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { getSudoku } from \"../redux/actions\";\r\nimport { useEffect } from \"react\";\r\n\r\nexport default function Auxiliar({sizing, level}){\r\n\r\n    // let[sudoku, setSudoku] = useState(undefined)\r\n    let siz= parseInt(sizing)\r\n    // let sudoku\r\n    let[react, setReact] = useState()\r\n    let[state, setState] = useState({mood: undefined})\r\n\r\n    // Redux:\r\n    const dispatch = useDispatch()\r\n    let sudoku = useSelector(state=> state.rows)\r\n    console.log(sudoku)\r\n\r\n    // useEffect(()=>{\r\n    //     setReact(sudoku)\r\n    //     setState({mood: 'generated'})\r\n    // }, [sudoku])\r\n\r\n    // console.log({siz, react, mood:state.mood})\r\n    // console.log(equal(size,s1,u1))\r\n\r\n    // function equal(size,c1_s,s1){\r\n    //     for(let pp=0; pp<size;pp++){\r\n    //         if(!c1_s.rows[pp].every(function(v,i) { return v === s1.rows[pp][i] } )) return false;\r\n    //     }\r\n    //     return true\r\n    // }\r\n\r\n    // axios.get('http://localhost:3001/foreign').then(r=> console.log('línea 30', r))\r\n\r\n    function generate(){\r\n\r\n        if(state.mood==='generated') del()\r\n        //Próximamente: create3() tendrá adentro suyo las siguientes 4 líneas:\r\n        // var size= 0; size= parseInt(sizing)\r\n        // var s1= {}; s1= Vertex(size) //Estructuras\r\n        // var u1= {}; u1= updateEvery(size*size, s1.rows, s1.cols, s1.boxs, s1.qubs) //Con 0s\r\n        // var c1_s= {}; c1_s= create3(size, s1.rows, s1.cols, s1.boxs, s1.qubs) //Con el sudoku lleno\r\n        // c1_s.qubs = updateQubsBy('rows', s1.rows) //Qubs actualizados\r\n        // console.log({before:c1_s})\r\n\r\n        // // let killed= Seniority(level, siz*siz) \r\n\r\n        // // let ready= kill(killed, c1_s.qubs)\r\n\r\n        // updateEvery(siz*siz,c1_s.rows,c1_s.cols,c1_s.boxs,c1_s.qubs)\r\n\r\n        // console.log({after:c1_s})\r\n        // console.log('lo que estás buscando',equal(size,c1_s,s1))\r\n\r\n        dispatch(getSudoku(parseInt(sizing)))\r\n\r\n        // sudoku= (c1_s) // acá se cambia y listo\r\n        // setReact(sudoku)\r\n        // setState({mood: 'generated'})\r\n        // return {sudoku}\r\n    }\r\n\r\n    // function del(){\r\n    //     // sudoku= (undefined)\r\n    //     setReact(undefined)\r\n    //     setState({mood: 'deleted'})\r\n    // }\r\n    \r\n\r\n    // let myPromis = new Promise(function(myResolve, myReject) {\r\n    //         myResolve(generate); \r\n    // });\r\n    \r\n    // function myResolve(a){\r\n    //     console.log(a())\r\n    // }\r\n\r\n    // function protocol(){\r\n    //     myPromis.then(function(value) {\r\n    //         console.log(value());\r\n    //     });\r\n    // }\r\n    \r\n    return (\r\n        <div>\r\n            <div>\r\n                {sizing && \r\n                <div>\r\n                    <button onClick={generate}>\r\n                        Generate\r\n                    </button>\r\n                </div>\r\n                }\r\n                {/* { state.mood === 'generated' &&\r\n                <button onClick={del}>\r\n                    Delete\r\n                </button>} */}\r\n                {/* {react && console.log(react)} */}\r\n                {/* {react && \r\n                <Two rows={react.rows} sizing={siz} cols={react.cols} qubs={react.qubs} boxs={react.boxs}/>\r\n                } */}\r\n            </div>\r\n        </div>\r\n    )\r\n}"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB,C,CACA;AACA;AACA;AACA;;AACA,OAAOC,GAAP,MAAgB,SAAhB;AACA,OAAO,mBAAP,C,CACA;AACA;AACA;;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,SAASC,SAAT,QAA0B,OAA1B;;AAEA,eAAe,SAASC,QAAT,OAAkC;EAAA;;EAAA,IAAhB;IAACC,MAAD;IAASC;EAAT,CAAgB;EAE7C;EACA,IAAIC,GAAG,GAAEC,QAAQ,CAACH,MAAD,CAAjB,CAH6C,CAI7C;;EACA,IAAG,CAACI,KAAD,EAAQC,QAAR,IAAoBZ,QAAQ,EAA/B;EACA,IAAG,CAACa,KAAD,EAAQC,QAAR,IAAoBd,QAAQ,CAAC;IAACe,IAAI,EAAEC;EAAP,CAAD,CAA/B,CAN6C,CAQ7C;;EACA,MAAMC,QAAQ,GAAGf,WAAW,EAA5B;EACA,IAAIgB,MAAM,GAAGf,WAAW,CAACU,KAAK,IAAGA,KAAK,CAACM,IAAf,CAAxB;EACAC,OAAO,CAACC,GAAR,CAAYH,MAAZ,EAX6C,CAa7C;EACA;EACA;EACA;EAEA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EAEA;;EAEA,SAASI,QAAT,GAAmB;IAEf,IAAGT,KAAK,CAACE,IAAN,KAAa,WAAhB,EAA6BQ,GAAG,GAFjB,CAGf;IACA;IACA;IACA;IACA;IACA;IACA;IAEA;IAEA;IAEA;IAEA;IACA;;IAEAN,QAAQ,CAACb,SAAS,CAACM,QAAQ,CAACH,MAAD,CAAT,CAAV,CAAR,CApBe,CAsBf;IACA;IACA;IACA;EACH,CAxD4C,CA0D7C;EACA;EACA;EACA;EACA;EAGA;EACA;EACA;EAEA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;;;EAEA,oBACI;IAAA,uBACI;MAAA,UACKA,MAAM,iBACP;QAAA,uBACI;UAAQ,OAAO,EAAEe,QAAjB;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MADJ;QAAA;QAAA;QAAA;MAAA;IAFJ;MAAA;MAAA;MAAA;IAAA;EADJ;IAAA;IAAA;IAAA;EAAA,QADJ;AAqBH;;GApGuBhB,Q;UASHJ,W,EACJC,W;;;KAVOG,Q"},"metadata":{},"sourceType":"module"}