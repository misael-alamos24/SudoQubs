{"ast":null,"code":"var _jsxFileName = \"F:\\\\code\\\\SudoQubs\\\\src\\\\components\\\\2-Two.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useState } from \"react\";\nimport { boxs, cols, create3, detectdifficulty, megasolution, poss, possRandC, qubs, restore, rows, sudoku, update, howmanyQubs, rows_cols_to_squares } from \"../functions/2-Estructures\";\nimport Three from \"./3-Three\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet initFilled = howmanyQubs(rows);\nexport default function Two() {\n  _s();\n\n  //9 rows con 9 squares cada una  \n  let [fill, sendFill] = useState();\n  let [carga, setCarga] = useState(false);\n  let [repsRows, sendRepsRows] = useState();\n  let [repsCols, sendRepsCols] = useState();\n  let [repsBoxs, sendRepsBoxs] = useState();\n  let numbers = new Array();\n  let modules = new Array();\n\n  for (let nn = 0; nn < 81; nn++) {\n    numbers.push(nn);\n  }\n\n  for (let mm = 0; mm < 9; mm++) {\n    modules.push(numbers.slice(mm * 9, (mm + 1) * 9));\n  }\n\n  function cargar() {\n    setCarga(true);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n      style: {\n        color: 'white'\n      },\n      children: [!fill && initFilled || fill && fill, \"/81 casilleros completos\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), rows.map((r, i) => /*#__PURE__*/_jsxDEV(Three, {\n      rows: rows,\n      row: r,\n      module: modules[i],\n      carga: carga && carga,\n      sendFill: sendFill,\n      sendRepsBoxs: sendRepsBoxs,\n      sendRepsCols: sendRepsCols,\n      sendRepsRows: sendRepsRows\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 32\n    }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: cargar,\n      children: \"Cargar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Two, \"fQ0NziTSYF/HUlzOElMdAV3QUNc=\");\n\n_c = Two;\n\nvar _c;\n\n$RefreshReg$(_c, \"Two\");","map":{"version":3,"names":["React","useState","boxs","cols","create3","detectdifficulty","megasolution","poss","possRandC","qubs","restore","rows","sudoku","update","howmanyQubs","rows_cols_to_squares","Three","initFilled","Two","fill","sendFill","carga","setCarga","repsRows","sendRepsRows","repsCols","sendRepsCols","repsBoxs","sendRepsBoxs","numbers","Array","modules","nn","push","mm","slice","cargar","color","map","r","i"],"sources":["F:/code/SudoQubs/src/components/2-Two.jsx"],"sourcesContent":["import React from \"react\";\r\nimport { useState } from \"react\";\r\nimport { boxs, cols, create3, detectdifficulty, megasolution, poss, possRandC, qubs, restore, rows, sudoku, update, howmanyQubs, rows_cols_to_squares } from \"../functions/2-Estructures\";\r\n\r\nimport Three from \"./3-Three\";\r\n\r\nlet initFilled= howmanyQubs(rows)\r\n\r\nexport default function Two() { //9 rows con 9 squares cada una  \r\n\r\n    let [fill, sendFill] = useState()\r\n    let [carga, setCarga] = useState(false)\r\n    let [repsRows, sendRepsRows] = useState()\r\n    let [repsCols, sendRepsCols] = useState()\r\n    let [repsBoxs, sendRepsBoxs] = useState()\r\n\r\n    let numbers= new Array()\r\n    let modules= new Array()\r\n    \r\n    for(let nn= 0; nn< 81; nn++){\r\n        numbers.push(nn)\r\n    }\r\n    for (let mm= 0; mm< 9; mm++){\r\n        modules.push(numbers.slice( mm * 9 , (mm + 1) * 9 ))\r\n    }\r\n\r\n    function cargar(){\r\n        setCarga(true)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h6 style={{color:'white'}}>\r\n                {(!fill && initFilled) || (fill && fill)}/81 casilleros completos\r\n            </h6>\r\n            {/* {rows && rows.length > 0 && rows.map((r, i)=> {a= modules[i]; console.log(a)} )} */}\r\n            {rows.map((r, i)=> <Three key={i} rows={rows} row={r} module={modules[i]} carga={carga && carga} sendFill={sendFill} sendRepsBoxs={sendRepsBoxs} sendRepsCols={sendRepsCols} sendRepsRows={sendRepsRows} />)}\r\n            <button onClick={cargar} >\r\n                Cargar\r\n            </button>\r\n            {/* <input type='text' placeholder='not only text' name='sudoku' value={input} onChange={(e)=>change(e)} /> */}\r\n\r\n            {/* después puede haber un ranking del mismo jugador para cada nivel que \r\n            compita, tipo jugó en 3 niveles, su ranking tiene 3 particiones, algo así\r\n            como un club que tiene divisiones inferiores, las cuales son independientes\r\n            en tanto a posición en la tabla se refiere */}\r\n        </div>\r\n    )\r\n} "],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,IAAT,EAAeC,IAAf,EAAqBC,OAArB,EAA8BC,gBAA9B,EAAgDC,YAAhD,EAA8DC,IAA9D,EAAoEC,SAApE,EAA+EC,IAA/E,EAAqFC,OAArF,EAA8FC,IAA9F,EAAoGC,MAApG,EAA4GC,MAA5G,EAAoHC,WAApH,EAAiIC,oBAAjI,QAA6J,4BAA7J;AAEA,OAAOC,KAAP,MAAkB,WAAlB;;AAEA,IAAIC,UAAU,GAAEH,WAAW,CAACH,IAAD,CAA3B;AAEA,eAAe,SAASO,GAAT,GAAe;EAAA;;EAAE;EAE5B,IAAI,CAACC,IAAD,EAAOC,QAAP,IAAmBnB,QAAQ,EAA/B;EACA,IAAI,CAACoB,KAAD,EAAQC,QAAR,IAAoBrB,QAAQ,CAAC,KAAD,CAAhC;EACA,IAAI,CAACsB,QAAD,EAAWC,YAAX,IAA2BvB,QAAQ,EAAvC;EACA,IAAI,CAACwB,QAAD,EAAWC,YAAX,IAA2BzB,QAAQ,EAAvC;EACA,IAAI,CAAC0B,QAAD,EAAWC,YAAX,IAA2B3B,QAAQ,EAAvC;EAEA,IAAI4B,OAAO,GAAE,IAAIC,KAAJ,EAAb;EACA,IAAIC,OAAO,GAAE,IAAID,KAAJ,EAAb;;EAEA,KAAI,IAAIE,EAAE,GAAE,CAAZ,EAAeA,EAAE,GAAE,EAAnB,EAAuBA,EAAE,EAAzB,EAA4B;IACxBH,OAAO,CAACI,IAAR,CAAaD,EAAb;EACH;;EACD,KAAK,IAAIE,EAAE,GAAE,CAAb,EAAgBA,EAAE,GAAE,CAApB,EAAuBA,EAAE,EAAzB,EAA4B;IACxBH,OAAO,CAACE,IAAR,CAAaJ,OAAO,CAACM,KAAR,CAAeD,EAAE,GAAG,CAApB,EAAwB,CAACA,EAAE,GAAG,CAAN,IAAW,CAAnC,CAAb;EACH;;EAED,SAASE,MAAT,GAAiB;IACbd,QAAQ,CAAC,IAAD,CAAR;EACH;;EAED,oBACI;IAAA,wBACI;MAAI,KAAK,EAAE;QAACe,KAAK,EAAC;MAAP,CAAX;MAAA,WACM,CAAClB,IAAD,IAASF,UAAV,IAA0BE,IAAI,IAAIA,IADvC;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ,EAKKR,IAAI,CAAC2B,GAAL,CAAS,CAACC,CAAD,EAAIC,CAAJ,kBAAS,QAAC,KAAD;MAAe,IAAI,EAAE7B,IAArB;MAA2B,GAAG,EAAE4B,CAAhC;MAAmC,MAAM,EAAER,OAAO,CAACS,CAAD,CAAlD;MAAuD,KAAK,EAAEnB,KAAK,IAAIA,KAAvE;MAA8E,QAAQ,EAAED,QAAxF;MAAkG,YAAY,EAAEQ,YAAhH;MAA8H,YAAY,EAAEF,YAA5I;MAA0J,YAAY,EAAEF;IAAxK,GAAYgB,CAAZ;MAAA;MAAA;MAAA;IAAA,QAAlB,CALL,eAMI;MAAQ,OAAO,EAAEJ,MAAjB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QANJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAkBH;;GAxCuBlB,G;;KAAAA,G"},"metadata":{},"sourceType":"module"}