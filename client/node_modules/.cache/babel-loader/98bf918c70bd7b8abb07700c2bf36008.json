{"ast":null,"code":"var _jsxFileName = \"F:\\\\code\\\\SudoQubs\\\\src\\\\components\\\\1-Oneandhalf.jsx\";\nimport { Vertex } from \"../functions/10-Estructures\";\nimport { updateEvery } from \"../functions/14-Global\";\nimport { updateQubsBy } from \"../functions/16-UpdateQubsBy\";\nimport { create3 } from \"../functions/17-Create\";\nimport Two from \"./2-Two\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Auxiliar(_ref) {\n  let {\n    sizing\n  } = _ref;\n  let size = parseInt(sizing);\n  var s1 = Vertex(size); //Estructuras\n\n  var u1 = updateEvery(size * size, s1.rows, s1.cols, s1.boxs, s1.qubs); //Con 0s\n\n  console.log({\n    s1,\n    u1\n  });\n  var c1_s = create3(size, s1.rows, s1.cols, s1.boxs, s1.qubs); //Con el sudoku lleno\n\n  c1_s.qubs = updateQubsBy('rows', s1.rows); //Qubs actualizados\n\n  console.log({\n    c1_s\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: c1_s.rows.length && /*#__PURE__*/_jsxDEV(Two, {\n      rows: c1_s.rows,\n      sizing: size,\n      cols: c1_s.cols,\n      qubs: c1_s.qubs,\n      boxs: c1_s.boxs\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n}\n_c = Auxiliar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Auxiliar\");","map":{"version":3,"names":["Vertex","updateEvery","updateQubsBy","create3","Two","Auxiliar","sizing","size","parseInt","s1","u1","rows","cols","boxs","qubs","console","log","c1_s","length"],"sources":["F:/code/SudoQubs/src/components/1-Oneandhalf.jsx"],"sourcesContent":["import { Vertex } from \"../functions/10-Estructures\"\r\nimport { updateEvery } from \"../functions/14-Global\"\r\nimport { updateQubsBy } from \"../functions/16-UpdateQubsBy\"\r\nimport { create3 } from \"../functions/17-Create\"\r\nimport Two from \"./2-Two\"\r\n\r\nexport default function Auxiliar({sizing}){\r\n\r\n    let size= parseInt(sizing)\r\n\r\n    var s1= Vertex(size) //Estructuras\r\n\r\n    var u1= updateEvery(size*size, s1.rows, s1.cols, s1.boxs, s1.qubs) //Con 0s\r\n    console.log({s1, u1})\r\n\r\n    var c1_s= create3(size, s1.rows, s1.cols, s1.boxs, s1.qubs) //Con el sudoku lleno\r\n\r\n    c1_s.qubs = updateQubsBy('rows', s1.rows) //Qubs actualizados\r\n    console.log({c1_s})\r\n    \r\n    return (\r\n        <div>\r\n            { c1_s.rows.length &&\r\n            <Two rows={c1_s.rows} sizing={size} cols={c1_s.cols} qubs={c1_s.qubs} boxs={c1_s.boxs}/>\r\n            }\r\n        </div>\r\n    )\r\n}"],"mappings":";AAAA,SAASA,MAAT,QAAuB,6BAAvB;AACA,SAASC,WAAT,QAA4B,wBAA5B;AACA,SAASC,YAAT,QAA6B,8BAA7B;AACA,SAASC,OAAT,QAAwB,wBAAxB;AACA,OAAOC,GAAP,MAAgB,SAAhB;;AAEA,eAAe,SAASC,QAAT,OAA2B;EAAA,IAAT;IAACC;EAAD,CAAS;EAEtC,IAAIC,IAAI,GAAEC,QAAQ,CAACF,MAAD,CAAlB;EAEA,IAAIG,EAAE,GAAET,MAAM,CAACO,IAAD,CAAd,CAJsC,CAIjB;;EAErB,IAAIG,EAAE,GAAET,WAAW,CAACM,IAAI,GAACA,IAAN,EAAYE,EAAE,CAACE,IAAf,EAAqBF,EAAE,CAACG,IAAxB,EAA8BH,EAAE,CAACI,IAAjC,EAAuCJ,EAAE,CAACK,IAA1C,CAAnB,CANsC,CAM6B;;EACnEC,OAAO,CAACC,GAAR,CAAY;IAACP,EAAD;IAAKC;EAAL,CAAZ;EAEA,IAAIO,IAAI,GAAEd,OAAO,CAACI,IAAD,EAAOE,EAAE,CAACE,IAAV,EAAgBF,EAAE,CAACG,IAAnB,EAAyBH,EAAE,CAACI,IAA5B,EAAkCJ,EAAE,CAACK,IAArC,CAAjB,CATsC,CASsB;;EAE5DG,IAAI,CAACH,IAAL,GAAYZ,YAAY,CAAC,MAAD,EAASO,EAAE,CAACE,IAAZ,CAAxB,CAXsC,CAWI;;EAC1CI,OAAO,CAACC,GAAR,CAAY;IAACC;EAAD,CAAZ;EAEA,oBACI;IAAA,UACMA,IAAI,CAACN,IAAL,CAAUO,MAAV,iBACF,QAAC,GAAD;MAAK,IAAI,EAAED,IAAI,CAACN,IAAhB;MAAsB,MAAM,EAAEJ,IAA9B;MAAoC,IAAI,EAAEU,IAAI,CAACL,IAA/C;MAAqD,IAAI,EAAEK,IAAI,CAACH,IAAhE;MAAsE,IAAI,EAAEG,IAAI,CAACJ;IAAjF;MAAA;MAAA;MAAA;IAAA;EAFJ;IAAA;IAAA;IAAA;EAAA,QADJ;AAOH;KArBuBR,Q"},"metadata":{},"sourceType":"module"}