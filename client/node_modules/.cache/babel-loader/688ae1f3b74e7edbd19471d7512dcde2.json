{"ast":null,"code":"function Wrongs(entityString, concat, quantity) {\n  let response = [];\n  let e = concat[entityString];\n\n  for (let a = 0; a < e.length; a++) {\n    if (e[a] !== -1) {\n      response.push({\n        indice: a,\n        subindice: e[a]\n      });\n    }\n  }\n\n  if (quantity > 1) {\n    return response;\n  }\n\n  if (!quantity || quantity === 1) {\n    return [response[0]];\n  }\n}\n\n_c = Wrongs;\nexport { Wrongs };\n\nvar _c;\n\n$RefreshReg$(_c, \"Wrongs\");","map":{"version":3,"names":["Wrongs","entityString","concat","quantity","response","e","a","length","push","indice","subindice"],"sources":["F:/code/SudoQubs/client/src/functions/3-Wrongs.js"],"sourcesContent":["\r\nfunction Wrongs(entityString, concat, quantity){\r\n    \r\n    let response= []\r\n    let e= concat[entityString]\r\n    for(let a=0; a<e.length; a++){\r\n        if(e[a]!==-1){\r\n            response.push({\r\n                indice: a,\r\n                subindice: e[a]\r\n            })\r\n        }\r\n    }\r\n    if(quantity> 1){\r\n        return response\r\n    }\r\n    if(!quantity || quantity===1){\r\n        return [response[0]]\r\n    }\r\n}\r\n\r\nexport {\r\n    Wrongs,\r\n}"],"mappings":"AACA,SAASA,MAAT,CAAgBC,YAAhB,EAA8BC,MAA9B,EAAsCC,QAAtC,EAA+C;EAE3C,IAAIC,QAAQ,GAAE,EAAd;EACA,IAAIC,CAAC,GAAEH,MAAM,CAACD,YAAD,CAAb;;EACA,KAAI,IAAIK,CAAC,GAAC,CAAV,EAAaA,CAAC,GAACD,CAAC,CAACE,MAAjB,EAAyBD,CAAC,EAA1B,EAA6B;IACzB,IAAGD,CAAC,CAACC,CAAD,CAAD,KAAO,CAAC,CAAX,EAAa;MACTF,QAAQ,CAACI,IAAT,CAAc;QACVC,MAAM,EAAEH,CADE;QAEVI,SAAS,EAAEL,CAAC,CAACC,CAAD;MAFF,CAAd;IAIH;EACJ;;EACD,IAAGH,QAAQ,GAAE,CAAb,EAAe;IACX,OAAOC,QAAP;EACH;;EACD,IAAG,CAACD,QAAD,IAAaA,QAAQ,KAAG,CAA3B,EAA6B;IACzB,OAAO,CAACC,QAAQ,CAAC,CAAD,CAAT,CAAP;EACH;AACJ;;KAlBQJ,M;AAoBT,SACIA,MADJ"},"metadata":{},"sourceType":"module"}