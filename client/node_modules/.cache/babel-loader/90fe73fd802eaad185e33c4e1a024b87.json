{"ast":null,"code":"function updateQubsBy(what, rows, cols, boxs) {\n  var q = 0;\n  var qubes = [];\n  console.log('line 5 updateWubsBy', what, rows, cols, boxs);\n\n  for (let aa = 0; aa < 9; aa++) {\n    for (let a = 0; a < 9; a++) {\n      if (what === \"rows\") {\n        qubes.push(rows[aa][a]);\n      }\n\n      if (what === \"cols\") {\n        qubes.push(cols[a][aa]);\n      }\n\n      if (what === \"boxs\") {\n        var gross = Math.floor(q / 9); //indica el numero de fila\n\n        var index = Math.floor(gross / 3); //este da 0, 1 ó 2\n\n        var module = q % 9;\n        let indexbox = (Math.floor(q / 9) * 3 + q % 3) % 9; //índice puntual -> 0 al 8\n\n        var foundbox = Math.floor(module / 3) + index * 3; //índice del box -> 0 al 8\n\n        qubes.push(boxs[foundbox][indexbox]);\n        q++;\n      }\n    }\n  }\n\n  return qubes;\n}\n\nexport { updateQubsBy };","map":{"version":3,"names":["updateQubsBy","what","rows","cols","boxs","q","qubes","console","log","aa","a","push","gross","Math","floor","index","module","indexbox","foundbox"],"sources":["F:/code/SudoQubs/src/functions/16-UpdateQubsBy.js"],"sourcesContent":["\r\nfunction updateQubsBy(what, rows, cols, boxs){\r\n    var q= 0\r\n    var qubes= []\r\n    console.log('line 5 updateWubsBy', what, rows, cols, boxs)\r\n    for(let aa= 0; aa < 9; aa++){\r\n        for(let a= 0; a < 9; a++){\r\n            if(what===\"rows\") {\r\n                qubes.push(rows[aa][a])\r\n            }\r\n            if(what===\"cols\") {\r\n                qubes.push(cols[a][aa])\r\n            }\r\n            if(what===\"boxs\") {\r\n                var gross= Math.floor(q / 9) //indica el numero de fila\r\n                var index= Math.floor(gross / 3) //este da 0, 1 ó 2\r\n                var module= (q % 9)\r\n                let indexbox = (Math.floor(q/9)*3 + q%3) %9 //índice puntual -> 0 al 8\r\n                var foundbox= Math.floor(module / 3) + index * 3 //índice del box -> 0 al 8\r\n                qubes.push(boxs[foundbox][indexbox])\r\n                q++\r\n            }            \r\n        }\r\n    }\r\n    return qubes\r\n}\r\n\r\nexport {\r\n    updateQubsBy,\r\n}"],"mappings":"AACA,SAASA,YAAT,CAAsBC,IAAtB,EAA4BC,IAA5B,EAAkCC,IAAlC,EAAwCC,IAAxC,EAA6C;EACzC,IAAIC,CAAC,GAAE,CAAP;EACA,IAAIC,KAAK,GAAE,EAAX;EACAC,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCP,IAAnC,EAAyCC,IAAzC,EAA+CC,IAA/C,EAAqDC,IAArD;;EACA,KAAI,IAAIK,EAAE,GAAE,CAAZ,EAAeA,EAAE,GAAG,CAApB,EAAuBA,EAAE,EAAzB,EAA4B;IACxB,KAAI,IAAIC,CAAC,GAAE,CAAX,EAAcA,CAAC,GAAG,CAAlB,EAAqBA,CAAC,EAAtB,EAAyB;MACrB,IAAGT,IAAI,KAAG,MAAV,EAAkB;QACdK,KAAK,CAACK,IAAN,CAAWT,IAAI,CAACO,EAAD,CAAJ,CAASC,CAAT,CAAX;MACH;;MACD,IAAGT,IAAI,KAAG,MAAV,EAAkB;QACdK,KAAK,CAACK,IAAN,CAAWR,IAAI,CAACO,CAAD,CAAJ,CAAQD,EAAR,CAAX;MACH;;MACD,IAAGR,IAAI,KAAG,MAAV,EAAkB;QACd,IAAIW,KAAK,GAAEC,IAAI,CAACC,KAAL,CAAWT,CAAC,GAAG,CAAf,CAAX,CADc,CACe;;QAC7B,IAAIU,KAAK,GAAEF,IAAI,CAACC,KAAL,CAAWF,KAAK,GAAG,CAAnB,CAAX,CAFc,CAEmB;;QACjC,IAAII,MAAM,GAAGX,CAAC,GAAG,CAAjB;QACA,IAAIY,QAAQ,GAAG,CAACJ,IAAI,CAACC,KAAL,CAAWT,CAAC,GAAC,CAAb,IAAgB,CAAhB,GAAoBA,CAAC,GAAC,CAAvB,IAA2B,CAA1C,CAJc,CAI8B;;QAC5C,IAAIa,QAAQ,GAAEL,IAAI,CAACC,KAAL,CAAWE,MAAM,GAAG,CAApB,IAAyBD,KAAK,GAAG,CAA/C,CALc,CAKmC;;QACjDT,KAAK,CAACK,IAAN,CAAWP,IAAI,CAACc,QAAD,CAAJ,CAAeD,QAAf,CAAX;QACAZ,CAAC;MACJ;IACJ;EACJ;;EACD,OAAOC,KAAP;AACH;;AAED,SACIN,YADJ"},"metadata":{},"sourceType":"module"}