{"ast":null,"code":"import { boxSize } from \"./8-Aux\";\n\nfunction updateQubsBy(what, rows, cols, boxs) {\n  let miniloop = rows.length;\n  let x = boxSize(rows.length).width;\n  let y = boxSize(rows.length).heigth;\n  var q = 0;\n  var qubes = [];\n\n  for (let aa = 0; aa < miniloop; aa++) {\n    for (let a = 0; a < miniloop; a++) {\n      if (what === \"rows\") {\n        qubes.push(rows[aa][a]); // console.log('line 9 updateWubsBy', what, rows, cols, boxs)\n      }\n\n      if (what === \"cols\") {\n        qubes.push(cols[a][aa]);\n      }\n\n      if (what === \"boxs\") {\n        var gross = Math.floor(q / miniloop); //indica el numero de fila\n\n        var index = Math.floor(gross / x); //este da 0, 1 ó 2\n\n        var module = q % miniloop;\n        let indexbox = (Math.floor(q / miniloop) * y + q % x) % miniloop; //índice puntual -> 0 al 8\n\n        var foundbox = Math.floor(module / y) + index * y; //índice del box -> 0 al 8\n\n        qubes.push(boxs[foundbox][indexbox]);\n        q++;\n      }\n    }\n  }\n\n  return qubes;\n}\n\nexport { updateQubsBy };","map":{"version":3,"names":["boxSize","updateQubsBy","what","rows","cols","boxs","miniloop","length","x","width","y","heigth","q","qubes","aa","a","push","gross","Math","floor","index","module","indexbox","foundbox"],"sources":["F:/code/SudoQubs/src/functions/16-UpdateQubsBy.js"],"sourcesContent":["import { boxSize } from \"./8-Aux\"\r\n\r\nfunction updateQubsBy(what, rows, cols, boxs){\r\n\r\n    let miniloop= rows.length\r\n    let x=boxSize(rows.length).width\r\n    let y=boxSize(rows.length).heigth\r\n\r\n    var q= 0\r\n    var qubes= []\r\n\r\n    for(let aa= 0; aa < miniloop; aa++){\r\n        for(let a= 0; a < miniloop; a++){\r\n            if(what===\"rows\") {\r\n                qubes.push(rows[aa][a])\r\n                // console.log('line 9 updateWubsBy', what, rows, cols, boxs)\r\n            }\r\n            if(what===\"cols\") {\r\n                qubes.push(cols[a][aa])\r\n            }\r\n            if(what===\"boxs\") {\r\n                var gross= Math.floor(q / miniloop) //indica el numero de fila\r\n                var index= Math.floor(gross / x) //este da 0, 1 ó 2\r\n                var module= (q % miniloop)\r\n                let indexbox = (Math.floor(q/miniloop)*y + q%x) %miniloop //índice puntual -> 0 al 8\r\n                var foundbox= Math.floor(module / y) + index * y //índice del box -> 0 al 8\r\n                qubes.push(boxs[foundbox][indexbox])\r\n                q++\r\n            }            \r\n        }\r\n    }\r\n    return qubes\r\n}\r\n\r\n\r\nexport {\r\n    updateQubsBy,\r\n}"],"mappings":"AAAA,SAASA,OAAT,QAAwB,SAAxB;;AAEA,SAASC,YAAT,CAAsBC,IAAtB,EAA4BC,IAA5B,EAAkCC,IAAlC,EAAwCC,IAAxC,EAA6C;EAEzC,IAAIC,QAAQ,GAAEH,IAAI,CAACI,MAAnB;EACA,IAAIC,CAAC,GAACR,OAAO,CAACG,IAAI,CAACI,MAAN,CAAP,CAAqBE,KAA3B;EACA,IAAIC,CAAC,GAACV,OAAO,CAACG,IAAI,CAACI,MAAN,CAAP,CAAqBI,MAA3B;EAEA,IAAIC,CAAC,GAAE,CAAP;EACA,IAAIC,KAAK,GAAE,EAAX;;EAEA,KAAI,IAAIC,EAAE,GAAE,CAAZ,EAAeA,EAAE,GAAGR,QAApB,EAA8BQ,EAAE,EAAhC,EAAmC;IAC/B,KAAI,IAAIC,CAAC,GAAE,CAAX,EAAcA,CAAC,GAAGT,QAAlB,EAA4BS,CAAC,EAA7B,EAAgC;MAC5B,IAAGb,IAAI,KAAG,MAAV,EAAkB;QACdW,KAAK,CAACG,IAAN,CAAWb,IAAI,CAACW,EAAD,CAAJ,CAASC,CAAT,CAAX,EADc,CAEd;MACH;;MACD,IAAGb,IAAI,KAAG,MAAV,EAAkB;QACdW,KAAK,CAACG,IAAN,CAAWZ,IAAI,CAACW,CAAD,CAAJ,CAAQD,EAAR,CAAX;MACH;;MACD,IAAGZ,IAAI,KAAG,MAAV,EAAkB;QACd,IAAIe,KAAK,GAAEC,IAAI,CAACC,KAAL,CAAWP,CAAC,GAAGN,QAAf,CAAX,CADc,CACsB;;QACpC,IAAIc,KAAK,GAAEF,IAAI,CAACC,KAAL,CAAWF,KAAK,GAAGT,CAAnB,CAAX,CAFc,CAEmB;;QACjC,IAAIa,MAAM,GAAGT,CAAC,GAAGN,QAAjB;QACA,IAAIgB,QAAQ,GAAG,CAACJ,IAAI,CAACC,KAAL,CAAWP,CAAC,GAACN,QAAb,IAAuBI,CAAvB,GAA2BE,CAAC,GAACJ,CAA9B,IAAkCF,QAAjD,CAJc,CAI4C;;QAC1D,IAAIiB,QAAQ,GAAEL,IAAI,CAACC,KAAL,CAAWE,MAAM,GAAGX,CAApB,IAAyBU,KAAK,GAAGV,CAA/C,CALc,CAKmC;;QACjDG,KAAK,CAACG,IAAN,CAAWX,IAAI,CAACkB,QAAD,CAAJ,CAAeD,QAAf,CAAX;QACAV,CAAC;MACJ;IACJ;EACJ;;EACD,OAAOC,KAAP;AACH;;AAGD,SACIZ,YADJ"},"metadata":{},"sourceType":"module"}