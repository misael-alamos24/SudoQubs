{"ast":null,"code":"import { detectPrime } from \"./9-PrimeNumber\";\nvar size;\n\nfunction Loop(loop, b) {\n  //loop: cuántos elementos tendrá, b: qué valor tendrá cada elemento\n  let ar = [];\n\n  for (let a = 0; a < loop; a++) {\n    ar[a] = b;\n  }\n\n  return ar;\n}\n/*\r\nToda la estructura del sudoku se basa en cuántos casilleros tiene cada caja. \r\nA partir de ese factor, se define el resto. \r\nEn el parámetro `loop` de la function Vertex, \r\nel usuario define ese número según su preferencia.\r\n*/\n\n\n_c = Loop;\n\nfunction Vertex(loop) {\n  if (typeof loop !== 'number') loop = 9;\n  if (detectPrime(loop)) loop = 9;\n  size = loop;\n  let rows = Loop(loop, []);\n  let cols = Loop(loop, []);\n  let boxs = Loop(loop, []);\n  let qubs = Loop(Math.pow(loop, 2), 0);\n  return {\n    rows,\n    cols,\n    boxs,\n    qubs\n  };\n}\n\n_c2 = Vertex;\nexport { Loop, Vertex, size };\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Loop\");\n$RefreshReg$(_c2, \"Vertex\");","map":{"version":3,"names":["detectPrime","size","Loop","loop","b","ar","a","Vertex","rows","cols","boxs","qubs","Math","pow"],"sources":["F:/code/SudoQubs/src/functions/10-Estructures.js"],"sourcesContent":["import { detectPrime } from \"./9-PrimeNumber\";\r\n\r\nvar size\r\n\r\nfunction Loop(loop,b){ //loop: cuántos elementos tendrá, b: qué valor tendrá cada elemento\r\n    let ar=[]\r\n    for(let a=0;a<loop;a++){\r\n        ar[a]= b\r\n    }\r\n    return ar\r\n}\r\n\r\n/*\r\nToda la estructura del sudoku se basa en cuántos casilleros tiene cada caja. \r\nA partir de ese factor, se define el resto. \r\nEn el parámetro `loop` de la function Vertex, \r\nel usuario define ese número según su preferencia.\r\n*/\r\n\r\nfunction Vertex(loop){ \r\n\r\n    if(typeof loop !== 'number') loop=9 \r\n    if(detectPrime(loop)) loop=9\r\n    size=loop\r\n\r\n    let rows= Loop(loop, [])\r\n    let cols= Loop(loop, [])\r\n    let boxs= Loop(loop, [])\r\n    let qubs= Loop(Math.pow(loop,2), 0)\r\n\r\n    return {\r\n        rows,\r\n        cols,\r\n        boxs,\r\n        qubs\r\n    }\r\n\r\n}\r\n\r\nexport {\r\n    Loop,\r\n    Vertex,\r\n    size,\r\n}"],"mappings":"AAAA,SAASA,WAAT,QAA4B,iBAA5B;AAEA,IAAIC,IAAJ;;AAEA,SAASC,IAAT,CAAcC,IAAd,EAAmBC,CAAnB,EAAqB;EAAE;EACnB,IAAIC,EAAE,GAAC,EAAP;;EACA,KAAI,IAAIC,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACH,IAAd,EAAmBG,CAAC,EAApB,EAAuB;IACnBD,EAAE,CAACC,CAAD,CAAF,GAAOF,CAAP;EACH;;EACD,OAAOC,EAAP;AACH;AAED;AACA;AACA;AACA;AACA;AACA;;;KAbSH,I;;AAeT,SAASK,MAAT,CAAgBJ,IAAhB,EAAqB;EAEjB,IAAG,OAAOA,IAAP,KAAgB,QAAnB,EAA6BA,IAAI,GAAC,CAAL;EAC7B,IAAGH,WAAW,CAACG,IAAD,CAAd,EAAsBA,IAAI,GAAC,CAAL;EACtBF,IAAI,GAACE,IAAL;EAEA,IAAIK,IAAI,GAAEN,IAAI,CAACC,IAAD,EAAO,EAAP,CAAd;EACA,IAAIM,IAAI,GAAEP,IAAI,CAACC,IAAD,EAAO,EAAP,CAAd;EACA,IAAIO,IAAI,GAAER,IAAI,CAACC,IAAD,EAAO,EAAP,CAAd;EACA,IAAIQ,IAAI,GAAET,IAAI,CAACU,IAAI,CAACC,GAAL,CAASV,IAAT,EAAc,CAAd,CAAD,EAAmB,CAAnB,CAAd;EAEA,OAAO;IACHK,IADG;IAEHC,IAFG;IAGHC,IAHG;IAIHC;EAJG,CAAP;AAOH;;MAlBQJ,M;AAoBT,SACIL,IADJ,EAEIK,MAFJ,EAGIN,IAHJ"},"metadata":{},"sourceType":"module"}