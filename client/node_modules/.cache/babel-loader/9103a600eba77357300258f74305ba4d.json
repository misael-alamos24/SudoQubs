{"ast":null,"code":"import { solution } from \"./0-Unrepeatable\";\nimport { Loop } from \"./10-Estructures\";\nimport { IndexBox, updateBox, updateCol } from \"./12-Update\";\nimport { updateQubsBy } from \"./16-UpdateQubsBy\";\nimport { boxSize } from \"./8-Aux\";\n\nfunction updateBoxCol(loop) {\n  for (let b = 0; b < loop; b++) {\n    //nine\n    updateBox(aa * loop + b, loop, width, heigth); //nine\n\n    updateCol(aa * loop + b, loop, cols); //nine\n  }\n}\n\nfunction create3(loop) {\n  var molino = 0;\n  var ochouno = 0;\n  let setRows = new Set();\n  let setBoxs = new Set();\n  let theSet = new Set();\n  let width = boxSize(loop).width;\n  let heigth = boxSize(loop).heigth;\n\n  for (let aa = 0; aa < loop; aa++) {\n    //nine\n    for (let a = 0; a < loop; a++) {\n      //nine\n      molino++;\n      let random = Math.ceil(Math.random() * loop); //nine\n\n      rows[aa][a] = random;\n\n      if (solution(rows[aa]) !== -1) {\n        setRows.add(random);\n\n        if (setRows.size >= loop) {\n          //nine\n          setBoxs = new Set();\n          setRows = new Set();\n          rows[aa] = Loop(loop, 0); //reemplacé new Array(9) por Loop()\n\n          qubs = updateQubsBy(\"rows\");\n          updateBoxCol(loop);\n          ochouno = aa * loop; //nine\n\n          a = -1;\n          continue;\n        }\n\n        a = a - 1;\n        continue;\n      }\n\n      cols[a][aa] = random;\n\n      if (aa > 0) {\n        if (solution(cols[a]) !== -1) {\n          setRows.add(random);\n\n          if (setRows.size >= loop) {\n            setBoxs = new Set();\n            setRows = new Set();\n            rows[aa] = Loop(loop, 0);\n            qubs = updateQubsBy(\"rows\");\n            updateBoxCol(loop);\n            ochouno = aa * loop;\n            a = -1;\n            continue;\n          }\n\n          a = a - 1;\n          continue;\n        }\n      } // REMODULADO\n      // var q= ochouno\n      // var gross= Math.floor(q / 9) //indica el numero de fila\n      // var index= Math.floor(gross / 3) //este da 0, 1 ó 2\n      // var module= (q % 9)\n      // let indexbox = (Math.floor(q/9)*3 + q%3) %9 //índice puntual -> 0 al 8\n      // var foundbox= Math.floor(module / 3) + index * 3 //índice del box -> 0 al 8\n      // boxs[foundbox][indexbox]= random\n      // updateBox(ochouno, loop, width, heigth)\n\n\n      let first = IndexBox(ochouno, loop, width, heigth).first;\n      let second = IndexBox(ochouno, loop, width, heigth).second;\n      boxs[first][second] = random;\n\n      if (solution(boxs[foundbox]) !== -1) {\n        setRows.add(random);\n        boxs[foundbox][indexbox] = 0; // console.log(setRows, aa, a, random, ochouno)                    \n\n        if (setRows.size >= loop) {\n          setBoxs = new Set();\n          setRows = new Set();\n          rows[aa] = Loop(loop, 0);\n          qubs = updateQubsBy(\"rows\");\n\n          for (let b = 0; b < loop; b++) {\n            updateBox(aa * loop + b, loop, width, heigth); //nine\n\n            updateCol(aa * loop + b, loop, cols); //nine\n          }\n\n          ochouno = aa * loop;\n          a = -1;\n          continue;\n        }\n\n        a = a - 1;\n        continue;\n      }\n\n      if (solution(rows[aa]) === -1) {\n        rows[aa][a] = random;\n      }\n\n      ochouno++;\n      setBoxs = new Set();\n      setRows = new Set();\n    }\n\n    theSet = new Set();\n  }\n\n  return {\n    ok: \"ok\",\n    molino\n  };\n}\n\nexport { create3 };","map":{"version":3,"names":["solution","Loop","IndexBox","updateBox","updateCol","updateQubsBy","boxSize","updateBoxCol","loop","b","aa","width","heigth","cols","create3","molino","ochouno","setRows","Set","setBoxs","theSet","a","random","Math","ceil","rows","add","size","qubs","first","second","boxs","foundbox","indexbox","ok"],"sources":["F:/code/SudoQubs/src/functions/17-Create.js"],"sourcesContent":["import { solution } from \"./0-Unrepeatable\"\r\nimport { Loop } from \"./10-Estructures\"\r\nimport { IndexBox, updateBox, updateCol } from \"./12-Update\"\r\nimport { updateQubsBy } from \"./16-UpdateQubsBy\"\r\nimport { boxSize } from \"./8-Aux\"\r\n\r\nfunction updateBoxCol(loop){\r\n    for(let b=0;b<loop;b++){ //nine\r\n        updateBox((aa * loop) +b, loop, width, heigth ) //nine\r\n        updateCol((aa * loop) +b, loop, cols ) //nine\r\n    }\r\n}\r\n\r\nfunction create3(loop){\r\n\r\n    var molino= 0\r\n    var ochouno= 0\r\n    let setRows= new Set()\r\n    let setBoxs= new Set()\r\n    let theSet= new Set() \r\n\r\n    let width= boxSize(loop).width\r\n    let heigth= boxSize(loop).heigth\r\n\r\n    for (let aa= 0; aa < loop; aa++) { //nine\r\n        for (let a= 0; a < loop; a++) { //nine\r\n            molino++\r\n            let random= Math.ceil( Math.random() * loop ) //nine\r\n            rows[aa][a]= random\r\n            if ( solution( rows[aa] ) !== -1 ) {\r\n                setRows.add(random)             \r\n                if(setRows.size >= loop) { //nine\r\n                    setBoxs= new Set()\r\n                    setRows= new Set()\r\n                    rows[aa]= Loop(loop, 0) //reemplacé new Array(9) por Loop()\r\n                    qubs= updateQubsBy(\"rows\")\r\n                    updateBoxCol(loop)\r\n                    ochouno= aa* loop //nine\r\n                    a= -1\r\n                    continue\r\n                }\r\n                a= a-1\r\n                continue\r\n            }\r\n\r\n            cols[a][aa]= random\r\n            if (aa > 0){\r\n                if ( solution( cols[a] ) !== -1 ) {\r\n                    setRows.add(random)             \r\n                    if(setRows.size >= loop) {\r\n                        setBoxs= new Set()\r\n                        setRows= new Set()\r\n                        rows[aa]= Loop(loop, 0)\r\n                        qubs= updateQubsBy(\"rows\")\r\n                        updateBoxCol(loop)\r\n                        ochouno= aa* loop\r\n                        a= -1\r\n                        continue\r\n                    }    \r\n                    a= a-1\r\n                    continue\r\n                }\r\n            }\r\n\r\n            // REMODULADO\r\n            // var q= ochouno\r\n            // var gross= Math.floor(q / 9) //indica el numero de fila\r\n            // var index= Math.floor(gross / 3) //este da 0, 1 ó 2\r\n            // var module= (q % 9)\r\n            // let indexbox = (Math.floor(q/9)*3 + q%3) %9 //índice puntual -> 0 al 8\r\n            // var foundbox= Math.floor(module / 3) + index * 3 //índice del box -> 0 al 8\r\n            // boxs[foundbox][indexbox]= random\r\n\r\n            // updateBox(ochouno, loop, width, heigth)\r\n            let first= IndexBox(ochouno, loop, width, heigth).first\r\n            let second= IndexBox(ochouno, loop, width, heigth).second\r\n            boxs[first][second]= random\r\n\r\n            if ( solution( boxs[foundbox] ) !== -1 ) {\r\n                setRows.add(random)\r\n                boxs[foundbox][indexbox]= 0                     \r\n                // console.log(setRows, aa, a, random, ochouno)                    \r\n                if(setRows.size >= loop) {\r\n                    setBoxs= new Set()\r\n                    setRows= new Set()\r\n                    rows[aa]= Loop(loop, 0)\r\n                    qubs= updateQubsBy(\"rows\")\r\n                    for(let b=0;b<loop;b++){\r\n                        updateBox((aa * loop) +b, loop, width, heigth ) //nine\r\n                        updateCol((aa * loop) +b, loop, cols ) //nine\r\n                    }\r\n                    ochouno= aa* loop\r\n                    a= -1\r\n                    continue\r\n                }\r\n                a=a-1\r\n                continue\r\n            }\r\n            \r\n            if(solution(rows[aa])=== -1){\r\n                rows[aa][a]= random\r\n            }\r\n            ochouno++\r\n            setBoxs= new Set()\r\n            setRows= new Set()\r\n        }\r\n        theSet= new Set()\r\n    }\r\n    return {ok:\"ok\", molino}\r\n}\r\n\r\nexport {\r\n    create3,\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}